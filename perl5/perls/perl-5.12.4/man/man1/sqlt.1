.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQLT 1"
.TH SQLT 1 "2011-05-05" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
sqlt \- convert SQL schema using SQL::Translator
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
For help:
.PP
.Vb 1
\&  sqlt \-h|\-\-help
.Ve
.PP
For a list of all parsers and producers:
.PP
.Vb 1
\&  sqlt \-l|\-\-list
.Ve
.PP
To translate a schema:
.PP
.Vb 4
\&  sqlt \-f|\-\-from|\-\-parser MySQL
\&       \-t|\-\-to|\-\-producer Oracle
\&       [options]
\&       file [file2 ...]
\&
\&  General Options:
\&
\&    \-d|\-\-debug         Print debug info
\&    \-v|\-\-validate      Validate the schema
\&    \-\-version          Show the version of SQL::Translator
\&    \-\-trace            Print parser trace info
\&    \-\-show\-warnings    Print warnings to STDERR
\&
\&  General Parser Options:
\&
\&    \-\-skip             Comma\-separated list of tables to skip (only implemented in some parsers)
\&    \-\-ignore_opts      Comma\-separated list of table options to ignore 
\&
\&  DBI Parser Options:
\&
\&    \-\-dsn              DSN for connecting to database
\&                       (see also \-\-use\-same\-auth below)
\&    \-\-db\-user          Database user
\&    \-\-db\-password      Database password
\&
\&  xSV Parser Options:
\&
\&    \-\-fs               The field separator
\&    \-\-rs               The record separator
\&    \-\-no\-trim          Don\*(Aqt trim whitespace on fields
\&    \-\-no\-scan          Don\*(Aqt scan fields for data types and sizes
\&
\&  MySQL Parser Options:
\&
\&    \-\-mysql\-parser\-version  Target MySQL parser version for dealing with
\&                              /*! comments; default = 30000
\&
\&  MySQL Producer Options:
\&
\&    \-\-mysql\-version  MySQL server version
\&
\&  General Producer Options
\&
\&    \-\-producer\-db\-user   Database user for producer
\&    \-\-producer\-db\-pass   Database password for producer
\&    \-\-producer\-dsn       DSN for producer
\&    \-\-use\-same\-auth      Use these DSN, user, password for producer output
\&
\&  DB Producer Options:
\&
\&    \-\-add\-drop\-table   Add \*(AqDROP TABLE\*(Aq statements before creates
\&    \-\-quote\-table\-names  Quote all table names in statements
\&    \-\-quote\-field\-names  Qjuote all field names in statements
\&    \-\-no\-comments      Don\*(Aqt include comments in SQL output
\&
\&  PostgreSQL Producer Options:
\&
\&    \-\-postgres\-version   PostgreSQL server version
\&
\&  Diagram Producer Options:
\&
\&    \-\-imap\-file        Filename to put image map data
\&    \-\-imap\-url         URL to use for image map
\&
\&  Dumper Producer Options:
\&
\&    \-\-skip             Comma\-separated list of tables to skip
\&    \-\-skiplike         Regex for tables to skip
\&    \-\-add\-truncate     Add "TRUNCATE TABLE" statements for each table
\&
\&  HTML/POD Producer Options:
\&
\&    \-\-pretty           Use CGI::Pretty for the output
\&    \-\-title            Title of schema
\&
\&  TTSchema Producer Options:
\&
\&    \-\-template             The path to the template
\&    \-\-tt\-var var=value     Pass extra variables to the template
\&    \-\-tt\-conf option=value Pass extra config options to Template
\&
\&  XML\-SQLFairy Producer Options:
\&
\&    \-\-add\-prefix       Use an explicit namespace prefix of \*(Aqsqlf:\*(Aq
\&    \-\-prefix=<p>       Use the namespace prefix given as argument.
\&    \-\-no\-newlines      Write the XML as a single line.
\&    \-\-indent=<n>       Use <n> characters of whitespace to indent the XML.
\&
\&  ClassDBI Producer Options:
\&
\&    \-\-package          Base package name for Class::DBI modules.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script is part of the \s-1SQL\s0 Fairy project.  It will try to convert
any source file for which it has a grammar into any format for which
it has a producer.
.PP
If using \*(L"show-warnings,\*(R" be sure to redirect \s-1STDERR\s0 to a separate file.
In bash, you could do this:
.PP
.Vb 2
\&    $ sql_translator.pl \-f MySQL \-t PostgreSQL \-\-show\-warnings \e
\&       file.sql 1>out 2>err
.Ve
.PP
You can specify a parser or producer located in any module that Perl
knows about, allowing you to easily substitute your own.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ken Youens-Clark <kclark@cpan.org>,
darren chamberlain <darren@cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
SQL::Translator, <http://sqlfairy.sourceforge.net>.
