.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojo::Server::Hypnotoad 3"
.TH Mojo::Server::Hypnotoad 3 "2012-03-07" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo::Server::Hypnotoad \- ALL GLORY TO THE HYPNOTOAD!
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Mojo::Server::Hypnotoad;
\&
\&  my $toad = Mojo::Server::Hypnotoad\->new;
\&  $toad\->run(\*(Aq./myapp.pl\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojo::Server::Hypnotoad is a full featured \s-1UNIX\s0 optimized preforking
non-blocking I/O \s-1HTTP\s0 1.1 and WebSocket server built around the very well
tested and reliable Mojo::Server::Daemon with \f(CW\*(C`IPv6\*(C'\fR, \f(CW\*(C`TLS\*(C'\fR, \f(CW\*(C`Bonjour\*(C'\fR,
\&\f(CW\*(C`libev\*(C'\fR and hot deployment support that just works.
.PP
To start applications with it you can use the hypnotoad script.
.PP
.Vb 2
\&  $ hypnotoad myapp.pl
\&  Server available at http://127.0.0.1:8080.
.Ve
.PP
You can run the exact same command again for automatic hot deployment.
.PP
.Vb 2
\&  $ hypnotoad myapp.pl
\&  Starting hot deployment for Hypnotoad server 31841.
.Ve
.PP
For Mojolicious and Mojolicious::Lite applications it will default to
\&\f(CW\*(C`production\*(C'\fR mode.
.PP
Optional modules \s-1EV\s0, IO::Socket::IP, IO::Socket::SSL and
Net::Rendezvous::Publish are supported transparently and used if
installed. Individual features can also be disabled with the
\&\f(CW\*(C`MOJO_NO_BONJOUR\*(C'\fR, \f(CW\*(C`MOJO_NO_IPV6\*(C'\fR and \f(CW\*(C`MOJO_NO_TLS\*(C'\fR environment variables.
.PP
See Mojolicious::Guides::Cookbook for deployment recipes.
.SH "SIGNALS"
.IX Header "SIGNALS"
Mojo::Server::Hypnotoad can be controlled at runtime with the following
signals.
.SS "Manager"
.IX Subsection "Manager"
.ie n .IP """INT"", ""TERM""" 2
.el .IP "\f(CWINT\fR, \f(CWTERM\fR" 2
.IX Item "INT, TERM"
Shutdown server immediately.
.ie n .IP """QUIT""" 2
.el .IP "\f(CWQUIT\fR" 2
.IX Item "QUIT"
Shutdown server gracefully.
.ie n .IP """TTIN""" 2
.el .IP "\f(CWTTIN\fR" 2
.IX Item "TTIN"
Increase worker pool by one.
.ie n .IP """TTOU""" 2
.el .IP "\f(CWTTOU\fR" 2
.IX Item "TTOU"
Decrease worker pool by one.
.ie n .IP """USR2""" 2
.el .IP "\f(CWUSR2\fR" 2
.IX Item "USR2"
Attempt zero downtime software upgrade (hot deployment) without losing any
incoming connections.
.Sp
.Vb 10
\&  Manager (old)
\&  |\- Worker [1]
\&  |\- Worker [2]
\&  |\- Worker [3]
\&  |\- Worker [4]
\&  \`\- Manager (new)
\&     |\- Worker [1]
\&     |\- Worker [2]
\&     |\- Worker [3]
\&     \`\- Worker [4]
.Ve
.Sp
The new manager will automatically send a \f(CW\*(C`QUIT\*(C'\fR signal to the old manager
and take over serving requests after starting up successfully.
.SS "Worker"
.IX Subsection "Worker"
.ie n .IP """INT"", ""TERM""" 2
.el .IP "\f(CWINT\fR, \f(CWTERM\fR" 2
.IX Item "INT, TERM"
Stop worker immediately.
.ie n .IP """QUIT""" 2
.el .IP "\f(CWQUIT\fR" 2
.IX Item "QUIT"
Stop worker gracefully.
.SH "SETTINGS"
.IX Header "SETTINGS"
Mojo::Server::Hypnotoad can be configured with the following settings, see
\&\*(L"Hypnotoad\*(R" in Mojolicious::Guides::Cookbook for examples.
.ie n .SS """accepts"""
.el .SS "\f(CWaccepts\fP"
.IX Subsection "accepts"
.Vb 1
\&  accepts => 100
.Ve
.PP
Maximum number of connections a worker is allowed to accept before stopping
gracefully, defaults to \f(CW1000\fR. Setting the value to \f(CW0\fR will allow workers
to accept new connections infinitely.
.ie n .SS """backlog"""
.el .SS "\f(CWbacklog\fP"
.IX Subsection "backlog"
.Vb 1
\&  backlog => 128
.Ve
.PP
Listen backlog size, defaults to \f(CW\*(C`SOMAXCONN\*(C'\fR.
.ie n .SS """clients"""
.el .SS "\f(CWclients\fP"
.IX Subsection "clients"
.Vb 1
\&  clients => 100
.Ve
.PP
Maximum number of parallel client connections per worker process, defaults to
\&\f(CW1000\fR.
.ie n .SS """graceful_timeout"""
.el .SS "\f(CWgraceful_timeout\fP"
.IX Subsection "graceful_timeout"
.Vb 1
\&  graceful_timeout => 15
.Ve
.PP
Maximum amount of time in seconds a graceful worker stop may take before
being forced, defaults to \f(CW30\fR.
.ie n .SS """group"""
.el .SS "\f(CWgroup\fP"
.IX Subsection "group"
.Vb 1
\&  group => \*(Aqstaff\*(Aq
.Ve
.PP
Group name for worker processes.
.ie n .SS """heartbeat_interval"""
.el .SS "\f(CWheartbeat_interval\fP"
.IX Subsection "heartbeat_interval"
.Vb 1
\&  heartbeat_interval => 3
.Ve
.PP
Heartbeat interval in seconds, defaults to \f(CW5\fR.
.ie n .SS """heartbeat_timeout"""
.el .SS "\f(CWheartbeat_timeout\fP"
.IX Subsection "heartbeat_timeout"
.Vb 1
\&  heartbeat_timeout => 2
.Ve
.PP
Maximum amount of time in seconds before a worker without a heartbeat will be
stopped, defaults to \f(CW10\fR.
.ie n .SS """inactivity_timeout"""
.el .SS "\f(CWinactivity_timeout\fP"
.IX Subsection "inactivity_timeout"
.Vb 1
\&  inactivity_timeout => 10
.Ve
.PP
Maximum amount of time in seconds a connection can be inactive before getting
dropped, defaults to \f(CW15\fR. Setting the value to \f(CW0\fR will allow connections
to be inactive indefinitely.
.ie n .SS """keep_alive_requests"""
.el .SS "\f(CWkeep_alive_requests\fP"
.IX Subsection "keep_alive_requests"
.Vb 1
\&  keep_alive_requests => 50
.Ve
.PP
Number of keep alive requests per connection, defaults to \f(CW25\fR.
.ie n .SS """listen"""
.el .SS "\f(CWlisten\fP"
.IX Subsection "listen"
.Vb 1
\&  listen => [\*(Aqhttp://*:80\*(Aq]
.Ve
.PP
List of one or more locations to listen on, defaults to \f(CW\*(C`http://*:8080\*(C'\fR. See
also \*(L"listen\*(R" in Mojo::Server::Daemon for more examples.
.ie n .SS """lock_file"""
.el .SS "\f(CWlock_file\fP"
.IX Subsection "lock_file"
.Vb 1
\&  lock_file => \*(Aq/tmp/hypnotoad.lock\*(Aq
.Ve
.PP
Full path to accept mutex lock file, defaults to a random temporary file.
.ie n .SS """lock_timeout"""
.el .SS "\f(CWlock_timeout\fP"
.IX Subsection "lock_timeout"
.Vb 1
\&  lock_timeout => 1
.Ve
.PP
Maximum amount of time in seconds a worker may block when waiting for the
accept mutex, defaults to \f(CW0.5\fR.
.ie n .SS """pid_file"""
.el .SS "\f(CWpid_file\fP"
.IX Subsection "pid_file"
.Vb 1
\&  pid_file => \*(Aq/var/run/hypnotoad.pid\*(Aq
.Ve
.PP
Full path to \s-1PID\s0 file, defaults to \f(CW\*(C`hypnotoad.pid\*(C'\fR in the same directory as
the application. Note that this value can only be changed after the server
has been stopped.
.ie n .SS """proxy"""
.el .SS "\f(CWproxy\fP"
.IX Subsection "proxy"
.Vb 1
\&  proxy => 1
.Ve
.PP
Activate reverse proxy support.
.ie n .SS """upgrade_timeout"""
.el .SS "\f(CWupgrade_timeout\fP"
.IX Subsection "upgrade_timeout"
.Vb 1
\&  upgrade_timeout => 30
.Ve
.PP
Maximum amount of time in seconds a zero downtime software upgrade may take
before getting canceled, defaults to \f(CW60\fR.
.ie n .SS """user"""
.el .SS "\f(CWuser\fP"
.IX Subsection "user"
.Vb 1
\&  user => \*(Aqsri\*(Aq
.Ve
.PP
Username for worker processes.
.ie n .SS """workers"""
.el .SS "\f(CWworkers\fP"
.IX Subsection "workers"
.Vb 1
\&  workers => 10
.Ve
.PP
Number of worker processes, defaults to \f(CW4\fR. A good rule of thumb is two
worker processes per cpu core.
.SH "METHODS"
.IX Header "METHODS"
Mojo::Server::Hypnotoad inherits all methods from Mojo::Base and
implements the following new ones.
.ie n .SS """run"""
.el .SS "\f(CWrun\fP"
.IX Subsection "run"
.Vb 1
\&  $toad\->run(\*(Aqscript/myapp\*(Aq);
.Ve
.PP
Run server for application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <http://mojolicio.us>.
