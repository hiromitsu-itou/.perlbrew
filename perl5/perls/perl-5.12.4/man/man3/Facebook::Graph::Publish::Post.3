.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Facebook::Graph::Publish::Post 3"
.TH Facebook::Graph::Publish::Post 3 "2011-10-19" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Facebook::Graph::Publish::Post \- Publish to a user's wall.
.SH "VERSION"
.IX Header "VERSION"
version 1.0301
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& my $fb = Facebook::Graph\->new;
\&
\& $fb\->add_post
\&    \->set_message(\*(AqI like beer.\*(Aq)
\&    \->publish;
\&
\& my $response = $fb\->add_post
\&    \->set_message(\*(AqI like Perl.\*(Aq)
\&    \->set_picture_uri(\*(Aqhttp://www.perl.org/i/camel_head.png\*(Aq)
\&    \->set_link_uri(\*(Aqhttp://www.perl.org/\*(Aq)
\&    \->set_link_name(\*(AqPerl.org\*(Aq)
\&    \->set_link_caption(\*(AqPerl is a programming language.\*(Aq)
\&    \->set_link_description(\*(AqA link to the Perl web site.\*(Aq)
\&    \->publish;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module gives you quick and easy access to publish to a user's Facebook feed.
.PP
\&\fB\s-1ATTENTION:\s0\fR You must have the \f(CW\*(C`publish_stream\*(C'\fR privilege to use this module.
.PP
\&\fB\s-1TIP:\s0\fR Facebook seems to use these terms interchangibly: Feed, Post, News, Wall. So if you want to publish to a user's wall, this is the mechanism you use to do that.
.SH "METHODS"
.IX Header "METHODS"
.SS "to ( id )"
.IX Subsection "to ( id )"
Specify a profile id to post to. Defaults to 'me', which is the currently logged in user.
.SS "set_message ( message )"
.IX Subsection "set_message ( message )"
Sets the text to post to the wall.
.PP
\fImessage\fR
.IX Subsection "message"
.PP
A string of text.
.SS "set_picture_uri ( uri )"
.IX Subsection "set_picture_uri ( uri )"
Sets the \s-1URI\s0 of a picture to be displayed in the message.
.PP
\fIuri\fR
.IX Subsection "uri"
.PP
A \s-1URI\s0 to a picture.
.SS "set_link_uri ( uri )"
.IX Subsection "set_link_uri ( uri )"
Sets the \s-1URI\s0 of a link that viewers can click on for more information about whatever you posted in \f(CW\*(C`set_message\*(C'\fR.
.PP
\fIuri\fR
.IX Subsection "uri"
.PP
A \s-1URI\s0 to a site.
.SS "set_link_name ( name )"
.IX Subsection "set_link_name ( name )"
If you want to give the link you set in \f(CW\*(C`set_link_uri\*(C'\fR a human friendly name, use this method.
.SS "name"
.IX Subsection "name"
A text string to be used as the name of the link.
.SS "set_link_caption ( caption )"
.IX Subsection "set_link_caption ( caption )"
Sets a short blurb to be displayed below the link/picture.
.PP
\fIcaption\fR
.IX Subsection "caption"
.PP
A text string.
.SS "set_link_description ( description )"
.IX Subsection "set_link_description ( description )"
Sets a longer description of the site you're linking to. Can also be a portion of the article you're linking to.
.PP
\fIdescription\fR
.IX Subsection "description"
.PP
A text string.
.SS "set_source ( uri )"
.IX Subsection "set_source ( uri )"
Sets a source \s-1URI\s0 for a flash or video file.
.PP
\fIuri\fR
.IX Subsection "uri"
.PP
The \s-1URI\s0 you wish to set. For example if you wanted to include a YouTube video:
.PP
.Vb 1
\& $post\->set_source(\*(Aqhttp://www.youtube.com/watch?v=efsJRdJ6dog\*(Aq);
.Ve
.SS "set_actions ( actions )"
.IX Subsection "set_actions ( actions )"
Sets a list of actions (or links) that should go in the post as things people can do with the post. This allows for integration of the post with third party sites.
.PP
\fIactions\fR
.IX Subsection "actions"
.PP
An array reference of hash references containing \f(CW\*(C`name\*(C'\fR / \f(CW\*(C`link\*(C'\fR pairs.
.PP
.Vb 7
\& $post\->actions([
\&    {
\&        name    => \*(AqClick Me!\*(Aq,
\&        link    => \*(Aqhttp://www.somesite.com/click\*(Aq,
\&    },
\&    ...
\& ]);
.Ve
.SS "add_action ( name, link )"
.IX Subsection "add_action ( name, link )"
Adds an action to the list of actions set either by previously calling \f(CW\*(C`add_action\*(C'\fR or by calling \f(CW\*(C`set_actions\*(C'\fR.
.PP
\fIname\fR
.IX Subsection "name"
.PP
The name of the action (the clickable label).
.PP
\fIlink\fR
.IX Subsection "link"
.PP
The \s-1URI\s0 of the action.
.SS "set_privacy ( setting, options )"
.IX Subsection "set_privacy ( setting, options )"
A completely optional privacy setting.
.SS "set_properties ( properties )"
.IX Subsection "set_properties ( properties )"
\&\*(L"property\*(R" values assigned when the post is published. This is typically rendered as a list of links.
.PP
.Vb 1
\&    $post\->set_properties( { "search engine:" => { "text" => "Google", "href" => "http://www.google.com/" } } );
.Ve
.PP
\fIsetting\fR
.IX Subsection "setting"
.PP
The privacy setting. Choose from: \s-1EVERYONE\s0, \s-1CUSTOM\s0, \s-1ALL_FRIENDS\s0, \s-1NETWORKS_FRIENDS\s0, and \s-1FRIENDS_OF_FRIENDS\s0. See <http://developers.facebook.com/docs/reference/api/post> for changes in this list.
.PP
\fIoptions\fR
.IX Subsection "options"
.PP
A hash reference of options to tweak the privacy setting. Some options are required depending on what privacy setting you chose. See <http://developers.facebook.com/docs/reference/api/post> for details.
.PP
.Vb 1
\& $post\->set_privacy(\*(AqCUSTOM\*(Aq, { friends => \*(AqSOME_FRIENDS\*(Aq, allow => [qw( 119393 993322 )] });
.Ve
.IP "friends" 4
.IX Item "friends"
A string that must be one of \s-1EVERYONE\s0, \s-1NETWORKS_FRIENDS\s0, \s-1FRIENDS_OF_FRIENDS\s0, \s-1ALL_FRIENDS\s0, \s-1SOME_FRIENDS\s0, \s-1SELF\s0, or \s-1NO_FRIENDS\s0.
.IP "networks" 4
.IX Item "networks"
An array reference of network ids.
.IP "allow" 4
.IX Item "allow"
An array reference of user ids.
.IP "deny." 4
.IX Item "deny."
An array reference of user ids.
.SS "set_target_countries ( countries )"
.IX Subsection "set_target_countries ( countries )"
Makes a post only available to viewers in certain countries.
.PP
.Vb 1
\& $post\->set_target_countries( [\*(AqUS\*(Aq] );
.Ve
.PP
\fIcountries\fR
.IX Subsection "countries"
.PP
An array reference of two letter country codes (upper case). You can find a list of country codes in the list of city ids here: <http://developers.facebook.com/attachment/all_cities_final.csv>.
.SS "set_target_regions ( regions )"
.IX Subsection "set_target_regions ( regions )"
Makes a post only available to viewers in certain regions.
.PP
.Vb 1
\& $post\->set_target_regions( [6,53] );
.Ve
.PP
\fIregions\fR
.IX Subsection "regions"
.PP
An array reference of region numbers however Facebook defines that. I've got no idea because their documentation sucks. I'm not even sure what a region is. Is it a region of a country? Of a continent? No idea. I do know it is an integer, but that's about it.
.SS "set_target_cities ( cities )"
.IX Subsection "set_target_cities ( cities )"
Makes a post only available to viewers in certain cities.
.PP
.Vb 1
\& $post\->set_target_cities( [2547804] );
.Ve
.PP
\fIcities\fR
.IX Subsection "cities"
.PP
An array reference of cities ids. In the example above I've listed Madison, \s-1WI\s0. You can find a list of their cities here: <http://developers.facebook.com/attachment/all_cities_final.csv>
.SS "set_target_locales ( locales )"
.IX Subsection "set_target_locales ( locales )"
Makes a post only available to viewers in certain locales.
.PP
.Vb 1
\& $post\->set_target_locales( [6] );
.Ve
.PP
\fIlocales\fR
.IX Subsection "locales"
.PP
An array reference of locales ids. You can find their list of locales here: <http://developers.facebook.com/attachment/locales_final.csv>
.SS "publish ( )"
.IX Subsection "publish ( )"
Posts the data and returns a Facebook::Graph::Response object. The response object should contain the id:
.PP
.Vb 1
\& {"id":"1647395831_130068550371568"}
.Ve
.SH "LEGAL"
.IX Header "LEGAL"
Facebook::Graph is Copyright 2010 Plain Black Corporation (<http://www.plainblack.com>) and is licensed under the same terms as Perl itself.
