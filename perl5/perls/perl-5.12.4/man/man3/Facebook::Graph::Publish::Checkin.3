.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Facebook::Graph::Publish::Checkin 3"
.TH Facebook::Graph::Publish::Checkin 3 "2011-10-19" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Facebook::Graph::Publish::Checkin \- Publish a location checkin.
.SH "VERSION"
.IX Header "VERSION"
version 1.0301
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& my $fb = Facebook::Graph\->new;
\&
\& $fb\->add_checkin
\&    \->set_place(222047056390)
\&    \->publish;
\&
\& my $response = $fb\->add_checkin
\&    \->set_place(222047056390)
\&    \->set_message(\*(AqMmm...pizza.\*(Aq)
\&    \->set_tags([qw(sarah.bownds 1647395831)])
\&    \->set_latitude()
\&    \->set_longitude()
\&    \->publish;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module gives you quick and easy access to publish user checkins to locations.
.PP
\&\fB\s-1ATTENTION:\s0\fR You must have the \f(CW\*(C`user_checkins\*(C'\fR privilege to use this module, and \f(CW\*(C`friends_checkins\*(C'\fR to get friends checkins.
.SH "METHODS"
.IX Header "METHODS"
.SS "to ( id )"
.IX Subsection "to ( id )"
Specify a profile id to post to. Defaults to 'me', which is the currently logged in user.
.SS "set_message ( message )"
.IX Subsection "set_message ( message )"
Sets the text to post to the wall.
.PP
\fImessage\fR
.IX Subsection "message"
.PP
A string of text.
.SS "set_place ( id )"
.IX Subsection "set_place ( id )"
Sets the id of the place you are checking in to.
.PP
\fIid\fR
.IX Subsection "id"
.PP
The id of a page for a place. For example \f(CW222047056390\fR is the id of Pete's Pizza and Pub in Milwaukee, \s-1WI\s0.
.SS "set_latitude ( coord )"
.IX Subsection "set_latitude ( coord )"
Sets sets the coords of your location. See also \f(CW\*(C`set_longitude\*(C'\fR
.PP
\fIcoord\fR
.IX Subsection "coord"
.PP
The decimal latitude of your current location.
.SS "set_longitude ( coord )"
.IX Subsection "set_longitude ( coord )"
Sets sets the coords of your location. See also \f(CW\*(C`set_latitude\*(C'\fR
.PP
\fIcoord\fR
.IX Subsection "coord"
.PP
The decimal longitude of your current location.
.SS "set_tags ( list )"
.IX Subsection "set_tags ( list )"
Sets the list of users at the location.
.PP
\fIlist\fR
.IX Subsection "list"
.PP
An array reference of Facebook user ids that are currently at this location with you.
.SS "publish ( )"
.IX Subsection "publish ( )"
Posts the data and returns a Facebook::Graph::Response object. The response object should contain the id:
.PP
.Vb 1
\& {"id":"1647395831_130068550371568"}
.Ve
.SH "LEGAL"
.IX Header "LEGAL"
Facebook::Graph is Copyright 2010 Plain Black Corporation (<http://www.plainblack.com>) and is licensed under the same terms as Perl itself.
