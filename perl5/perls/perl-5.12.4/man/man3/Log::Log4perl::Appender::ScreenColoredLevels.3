.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Appender::ScreenColoredLevels 3"
.TH Appender::ScreenColoredLevels 3 "2011-03-03" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Log::Log4perl::Appender::ScreenColoredLevel \- Colorize messages according to level
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Log::Log4perl qw(:easy);
\&
\&    Log::Log4perl\->init(\e <<\*(AqEOT\*(Aq);
\&      log4perl.category = DEBUG, Screen
\&      log4perl.appender.Screen = \e
\&          Log::Log4perl::Appender::ScreenColoredLevels
\&      log4perl.appender.Screen.layout = \e
\&          Log::Log4perl::Layout::PatternLayout
\&      log4perl.appender.Screen.layout.ConversionPattern = \e
\&          %d %F{1} %L> %m %n
\&    EOT
\&
\&      # Appears black
\&    DEBUG "Debug Message";
\&
\&      # Appears green
\&    INFO  "Info Message";
\&
\&      # Appears blue
\&    WARN  "Warn Message";
\&
\&      # Appears magenta
\&    ERROR "Error Message";
\&
\&      # Appears red
\&    FATAL "Fatal Message";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This appender acts like Log::Log4perl::Appender::Screen, except that
it colorizes its output, based on the priority of the message sent.
.PP
You can configure the colors and attributes used for the different
levels, by specifying them in your configuration:
.PP
.Vb 2
\&    log4perl.appender.Screen.color.TRACE=cyan
\&    log4perl.appender.Screen.color.DEBUG=bold blue
.Ve
.PP
You can also specify nothing, to indicate that level should not have
coloring applied, which means the text will be whatever the default
color for your terminal is.  This is the default for debug messages.
.PP
.Vb 1
\&    log4perl.appender.Screen.color.DEBUG=
.Ve
.PP
You can use any attribute supported by Term::ANSIColor as a configuration
option.
.PP
.Vb 2
\&    log4perl.appender.Screen.color.FATAL=\e
\&        bold underline blink red on_white
.Ve
.PP
The commonly used colors and attributes are:
.IP "attributes" 4
.IX Item "attributes"
\&\s-1BOLD\s0, \s-1DARK\s0, \s-1UNDERLINE\s0, \s-1UNDERSCORE\s0, \s-1BLINK\s0
.IP "colors" 4
.IX Item "colors"
\&\s-1BLACK\s0, \s-1RED\s0, \s-1GREEN\s0, \s-1YELLOW\s0, \s-1BLUE\s0, \s-1MAGENTA\s0, \s-1CYAN\s0, \s-1WHITE\s0
.IP "background colors" 4
.IX Item "background colors"
\&\s-1ON_BLACK\s0, \s-1ON_RED\s0, \s-1ON_GREEN\s0, \s-1ON_YELLOW\s0, \s-1ON_BLUE\s0, \s-1ON_MAGENTA\s0, \s-1ON_CYAN\s0, \s-1ON_WHITE\s0
.PP
See Term::ANSIColor for a complete list, and information on which are
supported by various common terminal emulators.
.PP
The default values for these options are:
.IP "Trace" 4
.IX Item "Trace"
Yellow
.IP "Debug" 4
.IX Item "Debug"
None (whatever the terminal default is)
.IP "Info" 4
.IX Item "Info"
Green
.IP "Warn" 4
.IX Item "Warn"
Blue
.IP "Error" 4
.IX Item "Error"
Magenta
.IP "Fatal" 4
.IX Item "Fatal"
Red
.PP
The constructor \f(CW\*(C`new()\*(C'\fR takes an optional parameter \f(CW\*(C`stderr\*(C'\fR,
if set to a true value, the appender will log to \s-1STDERR\s0. If \f(CW\*(C`stderr\*(C'\fR
is set to a false value, it will log to \s-1STDOUT\s0. The default setting
for \f(CW\*(C`stderr\*(C'\fR is 1, so messages will be logged to \s-1STDERR\s0 by default.
The constructor can also take an optional parameter \f(CW\*(C`color\*(C'\fR, whose
value is a  hashref of color configuration options, any levels that
are not included in the hashref will be set to their default values.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2002\-2009 by Mike Schilli <m@perlmeister.com> 
and Kevin Goess <cpan@goess.org>.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
