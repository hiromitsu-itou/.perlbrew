.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HTTP::MobileAgent::DoCoMo 3"
.TH HTTP::MobileAgent::DoCoMo 3 "2012-01-10" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTTP::MobileAgent::DoCoMo \- NTT DoCoMo implementation
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use HTTP::MobileAgent;
\&
\&  local $ENV{HTTP_USER_AGENT} = "DoCoMo/1.0/P502i/c10";
\&  my $agent = HTTP::MobileAgent\->new;
\&
\&  printf "Name: %s\en", $agent\->name;                    # "DoCoMo"
\&  printf "Ver: %s\en", $agent\->version;                  # 1.0
\&  printf "HTML ver: %s\en", $agent\->html_version;        # 2.0
\&  printf "Model: %s\en", $agent\->model;                  # "P502i"
\&  printf "Cache: %dk\en", $agent\->cache_size;            # 10
\&  print  "FOMA\en" if $agent\->is_foma;                   # false
\&  printf "Vendor: %s\en", $agent\->vendor;                # \*(AqP\*(Aq
\&  printf "Series: %s\en", $agent\->series;                # "502i"
\&
\&  # only available with <form utn>
\&  # e.g.) "DoCoMo/1.0/P503i/c10/serNMABH200331";
\&  printf "Serial: %s\en", $agent\->serial_number;         # "NMABH200331"
\&
\&  # e.g.) "DoCoMo/2.0 N2001(c10;ser0123456789abcde;icc01234567890123456789)";
\&  printf "Serial: %s\en", $agent\->serial_number;         # "0123456789abcde"
\&  printf "Card ID: %s\en", $agent\->card_id;              # "01234567890123456789"
\&
\&  # e.g.) "DoCoMo/1.0/P502i (Google CHTML Proxy/1.0)"
\&  printf "Comment: %s\en", $agent\->comment;              # "Google CHTML Proxy/1.0
\&
\&  # e.g.) "DoCoMo/1.0/D505i/c20/TB/W20H10"
\&  printf "Status: %s\en", $agent\->status;                # "TB"
\&
\&  # only available in eggy/M\-stage
\&  # e.g.) "DoCoMo/1.0/eggy/c300/s32/kPHS\-K"
\&  printf "Bandwidth: %dkbps\en", $agent\->bandwidth;      # 32
\&
\&  # e.g.) "DoCoMo/2.0 SO902i(c100;TB;W30H16)"
\&  print "XHTML compiant!\en" if $agent\->xhtml_compliant; # true
\&
\&  # e.g.) "DoCoMo/2.0 P07A(c500;TB;W24H15)"
\&  printf "Browser ver: %s\en", $agent\->browser_version   # 2.0
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
HTTP::MobileAgent::DoCoMo is a subclass of HTTP::MobileAgent, which
implements \s-1NTT\s0 docomo i\-mode user agents.
.SH "METHODS"
.IX Header "METHODS"
See \*(L"\s-1METHODS\s0\*(R" in HTTP::MobileAgent for common methods. Here are
HTTP::MobileAgent::DoCoMo specific methods.
.IP "version" 4
.IX Item "version"
.Vb 1
\&  $version = $agent\->version;
.Ve
.Sp
returns DoCoMo version number like \*(L"1.0\*(R".
.IP "html_version" 4
.IX Item "html_version"
.Vb 1
\&  $html_version = $agent\->html_version;
.Ve
.Sp
returns supported \s-1HTML\s0 version like '3.0'. retuns undef if unknown.
.IP "model" 4
.IX Item "model"
.Vb 1
\&  $model = $agent\->model;
.Ve
.Sp
returns name of the model like 'P502i'.
.IP "cache_size" 4
.IX Item "cache_size"
.Vb 1
\&  $cache_size = $agent\->cache_size;
.Ve
.Sp
returns cache size as killobytes unit. returns 5 if unknown.
.IP "is_foma" 4
.IX Item "is_foma"
.Vb 1
\&  if ($agent\->is_foma) { }
.Ve
.Sp
retuns whether it's \s-1FOMA\s0 or not.
.IP "vendor" 4
.IX Item "vendor"
.Vb 1
\&  $vendor = $agent\->vendor;
.Ve
.Sp
returns vender code like '\s-1SO\s0' for Sony. returns undef if unknown.
.IP "series" 4
.IX Item "series"
.Vb 1
\&  $series = $agent\->series;
.Ve
.Sp
returns series name like '502i'. returns undef if unknown.
.IP "serial_number" 4
.IX Item "serial_number"
.Vb 1
\&  $serial_number = $agent\->serial_number;
.Ve
.Sp
returns hardware unique serial number (15 digit in \s-1FOMA\s0, 11 digit
otherwise alphanumeric). Only available with <form utn>
attribute. returns undef otherwise.
.IP "card_id" 4
.IX Item "card_id"
.Vb 1
\&  $card_id = $agent\->card_id;
.Ve
.Sp
returns \s-1FOMA\s0 Card \s-1ID\s0 (20 digit alphanumeric). Only available in \s-1FOMA\s0
with <form utn> attribute. returns undef otherwise.
.IP "comment" 4
.IX Item "comment"
.Vb 1
\&  $comment = $agent\->comment;
.Ve
.Sp
returns comment on user agent string like 'Google Proxy'. returns
undef otherwise.
.IP "bandwidth" 4
.IX Item "bandwidth"
.Vb 1
\&  $bandwidth = $agent\->bandwidth;
.Ve
.Sp
returns bandwidth like 32 as killobytes unit. Only vailable in eggy,
returns undef otherwise.
.IP "status" 4
.IX Item "status"
.Vb 1
\&  $status = $agent\->status;
.Ve
.Sp
returns status like \*(L"\s-1TB\s0\*(R", \*(L"\s-1TC\s0\*(R", \*(L"\s-1TD\s0\*(R" or \*(L"\s-1TJ\s0\*(R", which means:
.Sp
.Vb 4
\&  TB | Browsers
\&  TC | Browsers with image off (only Available in HTML 5.0)
\&  TD | Fetching JAR
\&  TJ | i\-Appli
.Ve
.IP "xhtml_compliant" 4
.IX Item "xhtml_compliant"
.Vb 1
\&  if ($agent\->xhtml_compliant) { }
.Ve
.Sp
returns if the agent is \s-1XHTML\s0 compliant.
.IP "browser_version" 4
.IX Item "browser_version"
.Vb 1
\&  if ($agent\->browser_version > 2.0) { }
.Ve
.Sp
returns browser version(1.0 or 2.0).
.SH "AUTHOR"
.IX Header "AUTHOR"
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTTP::MobileAgent
.PP
http://www.nttdocomo.co.jp/p_s/imode/spec/useragent.html
.PP
http://www.nttdocomo.co.jp/p_s/imode/spec/ryouiki.html
.PP
http://www.nttdocomo.co.jp/p_s/imode/tag/utn.html
.PP
http://www.nttdocomo.co.jp/p_s/mstage/visual/contents/cnt_mpage.html
