.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Lingua::Stem::Fr 3"
.TH Lingua::Stem::Fr 3 "2004-04-27" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Lingua::Stem::Fr \- Perl French Stemming
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Lingua::Stem::Fr;
\&
\&    my $stems = Lingua::Stem::Fr::stem({ \-words => $word_list_reference,
\&                                         \-locale => \*(Aqfr\*(Aq,
\&                                         \-exceptions => $exceptions_hash,
\&                                      });
\&
\&    my $stem = Lingua::Stem::Fr::stem_word( $word );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module use the a modified version of the Porter Stemming Algorithm to return a stemmed words.
.PP
The algorithm is implemented as described in:
.PP
http://snowball.tartarus.org/french/stemmer.html
.PP
with some improvement.
.PP
The code is carefully crafted to work in conjunction with the Lingua::Stem
module by Benjamin Franz.
This french version is based too, on the work of Aldo Calpini (Italian Version)
.SH "METHODS"
.IX Header "METHODS"
.IP "\(bu" 4
stem({ \-words => \e@words, \-locale => 'fr', \-exceptions => \e%exceptions });                                                                                
Stems a list of passed words. Returns an anonymous list reference to the stemmed
words.
.Sp
Example:
.Sp
.Vb 4
\&    my $stemmed_words = Lingua::Stem::Fr::stem({ \-words => \e@words,
\&                                                 \-locale => \*(Aqfr\*(Aq,
\&                                                 \-exceptions => \e%exceptions,
\&                                              });
.Ve
.IP "\(bu" 4
stem_word( \f(CW$word\fR );
.Sp
Stems a single word and returns the stem directly.
.Sp
Example:
.Sp
.Vb 1
\&    my $stem = Lingua::Stem::Fr::stem_word( $word );
.Ve
.IP "\(bu" 4
stem_caching({ \-level => 0|1|2 });
.Sp
Sets the level of stem caching.
.Sp
\&'0' means 'no caching'. This is the default level.
.Sp
\&'1' means 'cache per run'. This caches stemming results during a single
    call to 'stem'.
.Sp
\&'2' means 'cache indefinitely'. This caches stemming results until
    either the process exits or the 'clear_stem_cache' method is called.
.IP "\(bu" 4
clear_stem_cache;
.Sp
Clears the cache of stemmed words
.SH "HISTORY"
.IX Header "HISTORY"
.IP "0.01" 8
.IX Item "0.01"
Original version; created by h2xs 1.23 with options
.Sp
.Vb 3
\&  \-ACX
\&        \-n
\&        Lingua::Stem::Fr
.Ve
.IP "0.02" 8
.IX Item "0.02"
Minor change in documentation and disable of limitation to perl 5.8.3+
.SH "SEE ALSO"
.IX Header "SEE ALSO"
You can see the French stemming algorithm from Mr Porter here :
.PP
http://snowball.tartarus.org/french/stemmer.html
.PP
Another French stemming tool in Perl (French page) :
.PP
http://www.univ\-nancy2.fr/pers/namer/Telecharger_Flemm.html
.SH "AUTHOR"
.IX Header "AUTHOR"
Se\*'bastien Darribere-Pleyt, <sebastien.darribere@lefute.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2003 by Aldo Calpini <dada@perl.it>
.PP
Copyright (C) 2004 by Se\*'bastien Darribere-Pleyt <sebastien.darribere@lefute.com>
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.3 or,
at your option, any later version of Perl 5 you may have available.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 563:" 4
.IX Item "Around line 563:"
Expected '=item *'
.IP "Around line 571:" 4
.IX Item "Around line 571:"
Expected '=item *'
.IP "Around line 583:" 4
.IX Item "Around line 583:"
Expected '=item *'
