.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Catalyst::Manual::Deployment::nginx::FastCGI 3"
.TH Catalyst::Manual::Deployment::nginx::FastCGI 3 "2011-08-29" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Manual::Deployment::nginx::FastCGI \- Deploying Catalyst with nginx
.SH "nginx"
.IX Header "nginx"
Catalyst runs under nginx via FastCGI in a similar fashion as the lighttpd
standalone server.
.PP
nginx does not have its own internal FastCGI process manager, so you must run
the FastCGI service separately.
.SS "Configuration"
.IX Subsection "Configuration"
To configure nginx, you must configure the FastCGI parameters and also the
socket your FastCGI daemon is listening on.  It can be either a \s-1TCP\s0 socket
or a Unix file socket.
.PP
The server configuration block should look roughly like:
.PP
.Vb 2
\&    server {
\&        listen $port;
\&
\&        location / {
\&            fastcgi_param  QUERY_STRING       $query_string;
\&            fastcgi_param  REQUEST_METHOD     $request_method;
\&            fastcgi_param  CONTENT_TYPE       $content_type;
\&            fastcgi_param  CONTENT_LENGTH     $content_length;
\&
\&            fastcgi_param  SCRIPT_NAME        /;
\&            fastcgi_param  PATH_INFO          $fastcgi_script_name;
\&            fastcgi_param  REQUEST_URI        $request_uri;
\&            fastcgi_param  DOCUMENT_URI       $document_uri;
\&            fastcgi_param  DOCUMENT_ROOT      $document_root;
\&            fastcgi_param  SERVER_PROTOCOL    $server_protocol;
\&
\&            fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
\&            fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;
\&
\&            fastcgi_param  REMOTE_ADDR        $remote_addr;
\&            fastcgi_param  REMOTE_PORT        $remote_port;
\&            fastcgi_param  SERVER_ADDR        $server_addr;
\&            fastcgi_param  SERVER_PORT        $server_port;
\&            fastcgi_param  SERVER_NAME        $server_name;
\&        
\&            # Adjust the socket for your applications!
\&            fastcgi_pass   unix:$docroot/myapp.socket;
\&        }
\&    }
.Ve
.PP
It is the standard convention of nginx to include the fastcgi_params in a
separate file (usually something like \f(CW\*(C`/etc/nginx/fastcgi_params\*(C'\fR) and
simply include that file.
.SS "Non-root configuration"
.IX Subsection "Non-root configuration"
If you properly specify the \s-1PATH_INFO\s0 and \s-1SCRIPT_NAME\s0 parameters your
application will be accessible at any path. The \s-1SCRIPT_NAME\s0 variable is the
prefix of your application, and \s-1PATH_INFO\s0 would be everything in addition.
.PP
As an example, if your application is rooted at /myapp, you would configure:
.PP
.Vb 2
\&    fastcgi_param  SCRIPT_NAME /myapp/;
\&    fastcgi_param  PATH_INFO   $fastcgi_script_name;
.Ve
.PP
\&\f(CW$fastcgi_script_name\fR would be \*(L"/myapp/path/of/the/action\*(R".  Catalyst will
process this accordingly and setup the application base as expected.
.PP
This behavior is somewhat different from Apache and lighttpd, but is still
functional.
.PP
For more information on nginx, visit:
<http://nginx.net>
.SH "AUTHORS"
.IX Header "AUTHORS"
Catalyst Contributors, see Catalyst.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This library is free software. You can redistribute it and/or modify it under
the same terms as Perl itself.
