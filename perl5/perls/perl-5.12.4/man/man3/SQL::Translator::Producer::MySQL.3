.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQL::Translator::Producer::MySQL 3"
.TH SQL::Translator::Producer::MySQL 3 "2011-09-04" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SQL::Translator::Producer::MySQL \- MySQL\-specific producer for SQL::Translator
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Use via SQL::Translator:
.PP
.Vb 1
\&  use SQL::Translator;
\&
\&  my $t = SQL::Translator\->new( parser => \*(Aq...\*(Aq, producer => \*(AqMySQL\*(Aq, \*(Aq...\*(Aq );
\&  $t\->translate;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module will produce text output of the schema suitable for MySQL.
There are still some issues to be worked out with syntax differences 
between MySQL versions 3 and 4 (\*(L"\s-1SET\s0 foreign_key_checks,\*(R" character sets
for fields, etc.).
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
This producer takes a single optional producer_arg \f(CW\*(C`mysql_version\*(C'\fR, which 
provides the desired version for the target database. By default MySQL v3 is
assumed, and statements pertaining to any features introduced in later versions
(e.g. \s-1CREATE\s0 \s-1VIEW\s0) are not produced.
.PP
Valid version specifiers for \f(CW\*(C`mysql_version\*(C'\fR are listed here
.SS "Table Types"
.IX Subsection "Table Types"
Normally the tables will be created without any explicit table type given and
so will use the MySQL default.
.PP
Any tables involved in foreign key constraints automatically get a table type
of InnoDB, unless this is overridden by setting the \f(CW\*(C`mysql_table_type\*(C'\fR extra
attribute explicitly on the table.
.SS "Extra attributes."
.IX Subsection "Extra attributes."
The producer recognises the following extra attributes on the Schema objects.
.IP "\fBfield.list\fR" 4
.IX Item "field.list"
Set the list of allowed values for Enum fields.
.IP "\fBfield.binary\fR, \fBfield.unsigned\fR, \fBfield.zerofill\fR" 4
.IX Item "field.binary, field.unsigned, field.zerofill"
Set the MySQL field options of the same name.
.IP "\fBfield.renamed_from\fR, \fBtable.renamed_from\fR" 4
.IX Item "field.renamed_from, table.renamed_from"
Use when producing diffs to indicate that the current table/field has been
renamed from the old name as given in the attribute value.
.IP "\fBtable.mysql_table_type\fR" 4
.IX Item "table.mysql_table_type"
Set the type of the table e.g. 'InnoDB', 'MyISAM'. This will be
automatically set for tables involved in foreign key constraints if it is
not already set explicitly. See \*(L"Table Types\*(R".
.Sp
Please note that the \f(CW\*(C`ENGINE\*(C'\fR option is the preferred method of specifying
the MySQL storage engine to use, but this method still works for backwards
compatibility.
.IP "\fBtable.mysql_charset\fR, \fBtable.mysql_collate\fR" 4
.IX Item "table.mysql_charset, table.mysql_collate"
Set the tables default charater set and collation order.
.IP "\fBfield.mysql_charset\fR, \fBfield.mysql_collate\fR" 4
.IX Item "field.mysql_charset, field.mysql_collate"
Set the fields charater set and collation order.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
SQL::Translator, http://www.mysql.com/.
.SH "AUTHORS"
.IX Header "AUTHORS"
darren chamberlain <darren@cpan.org>,
Ken Youens-Clark <kclark@cpan.org>.
