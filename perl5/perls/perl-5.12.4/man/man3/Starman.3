.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Starman 3"
.TH Starman 3 "2011-09-19" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Starman \- High\-performance preforking PSGI/Plack web server
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Run app.psgi with the default settings
\&  > starman
\&
\&  # run with Server::Starter
\&  > start_server \-\-port 127.0.0.1:80 \-\- starman \-\-workers 32 myapp.psgi
\&
\&  # UNIX domain sockets
\&  > starman \-\-listen /tmp/starman.sock
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Starman is a \s-1PSGI\s0 perl web server that has unique features such as:
.IP "High Performance" 4
.IX Item "High Performance"
Uses the fast \s-1XS/C\s0 \s-1HTTP\s0 header parser
.IP "Preforking" 4
.IX Item "Preforking"
Spawns workers preforked like most high performance \s-1UNIX\s0 servers
do. Starman also reaps dead children and automatically restarts the
worker pool.
.IP "Signals" 4
.IX Item "Signals"
Supports \f(CW\*(C`HUP\*(C'\fR for graceful restarts, and \f(CW\*(C`TTIN\*(C'\fR/\f(CW\*(C`TTOU\*(C'\fR to
dynamically increase or decrease the number of worker processes.
.IP "Superdaemon aware" 4
.IX Item "Superdaemon aware"
Supports Server::Starter for hot deploy and graceful restarts.
.IP "Multiple interfaces and \s-1UNIX\s0 Domain Socket support" 4
.IX Item "Multiple interfaces and UNIX Domain Socket support"
Able to listen on multiple intefaces including \s-1UNIX\s0 sockets.
.IP "Small memory footprint" 4
.IX Item "Small memory footprint"
Preloading the applications with \f(CW\*(C`\-\-preload\-app\*(C'\fR command line option
enables copy-on-write friendly memory management. Also, the minimum
memory usage Starman requires for the master process is 7MB and
children (workers) is less than 3.0MB.
.IP "\s-1PSGI\s0 compatible" 4
.IX Item "PSGI compatible"
Can run any \s-1PSGI\s0 applications and frameworks
.IP "\s-1HTTP/1\s0.1 support" 4
.IX Item "HTTP/1.1 support"
Supports chunked requests and responses, keep-alive and pipeline requests.
.IP "\s-1UNIX\s0 only" 4
.IX Item "UNIX only"
This server does not support Win32.
.SH "PERFORMANCE"
.IX Header "PERFORMANCE"
Here's a simple benchmark using \f(CW\*(C`Hello.psgi\*(C'\fR.
.PP
.Vb 10
\&  \-\- server: Starman (workers=10)
\&  Requests per second:    6849.16 [#/sec] (mean)
\&  \-\- server: Twiggy
\&  Requests per second:    3911.78 [#/sec] (mean)
\&  \-\- server: AnyEvent::HTTPD
\&  Requests per second:    2738.49 [#/sec] (mean)
\&  \-\- server: HTTP::Server::PSGI
\&  Requests per second:    2218.16 [#/sec] (mean)
\&  \-\- server: HTTP::Server::PSGI (workers=10)
\&  Requests per second:    2792.99 [#/sec] (mean)
\&  \-\- server: HTTP::Server::Simple
\&  Requests per second:    1435.50 [#/sec] (mean)
\&  \-\- server: Corona
\&  Requests per second:    2332.00 [#/sec] (mean)
\&  \-\- server: POE
\&  Requests per second:    503.59 [#/sec] (mean)
.Ve
.PP
This benchmark was processed with \f(CW\*(C`ab \-c 10 \-t 1 \-k\*(C'\fR on MacBook Pro
13" late 2009 model on Mac \s-1OS\s0 X 10.6.2 with perl 5.10.0. \s-1YMMV\s0.
.SH "NAMING"
.IX Header "NAMING"
.SS "Starman?"
.IX Subsection "Starman?"
The name Starman is taken from the song (\fIStar na Otoko\fR) by the
Japanese rock band Unicorn (yes, Unicorn!). It's also known as a song
by David Bowie, a power-up from Super Mario Brothers and a character
from Earthbound, all of which I love.
.SS "Why the cute name instead of more descriptive namespace? Are you on drugs?"
.IX Subsection "Why the cute name instead of more descriptive namespace? Are you on drugs?"
I'm sick of naming Perl software like
HTTP::Server::PSGI::How::Its::Written::With::What::Module and people
call it \s-1HSPHIWWWM\s0 on \s-1IRC\s0. It's hard to say on speeches and newbies
would ask questions what they stand for every day. That's crazy.
.PP
This module actually includes the longer alias and an empty subclass
HTTP::Server::PSGI::Net::Server::PreFork for those who like to type
more ::'s. It would actually help you find this software by searching
for \fI\s-1PSGI\s0 Server Prefork\fR on \s-1CPAN\s0, which i believe is a good thing.
.PP
Yes, maybe I'm on drugs. We'll see.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.PP
Andy Grundman wrote Catalyst::Engine::HTTP::Prefork, which this module
is heavily based on.
.PP
Kazuho Oku wrote Net::Server::SS::PreFork that makes it easy to add
Server::Starter support to this software.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Plack Catalyst::Engine::HTTP::Prefork Net::Server::Prefork
