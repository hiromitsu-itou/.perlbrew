.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Any::Moose 3"
.TH Any::Moose 3 "2011-11-08" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Any::Moose \- use Moose or Mouse modules
.SH "VERSION"
.IX Header "VERSION"
version 0.18
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.SS "\s-1BASIC\s0"
.IX Subsection "BASIC"
.Vb 1
\&    package Class;
\&
\&    # uses Moose if it\*(Aqs loaded or demanded, Mouse otherwise
\&    use Any::Moose;
\&
\&    # cleans the namespace up
\&    no Any::Moose;
.Ve
.SS "\s-1OTHER\s0 \s-1MODULES\s0"
.IX Subsection "OTHER MODULES"
.Vb 2
\&    package Other::Class;
\&    use Any::Moose;
\&
\&    # uses Moose::Util::TypeConstraints if the class has loaded Moose,
\&    # Mouse::Util::TypeConstraints otherwise.
\&    use Any::Moose \*(Aq::Util::TypeConstraints\*(Aq;
.Ve
.SS "\s-1ROLES\s0"
.IX Subsection "ROLES"
.Vb 2
\&    package My::Sorter;
\&    use Any::Moose \*(AqRole\*(Aq;
\&
\&    requires \*(Aqcmp\*(Aq;
.Ve
.SS "\s-1COMPLEX\s0 \s-1USAGE\s0"
.IX Subsection "COMPLEX USAGE"
.Vb 2
\&    package My::Meta::Class;
\&    use Any::Moose;
\&
\&    # uses subtype from Moose::Util::TypeConstraints if the class loaded Moose,
\&    # subtype from Mouse::Util::TypeConstraints otherwise.
\&    # similarly for Mo*se::Util\*(Aqs does_role
\&    use Any::Moose (
\&        \*(Aq::Util::TypeConstraints\*(Aq => [\*(Aqsubtype\*(Aq],
\&        \*(Aq::Util\*(Aq => [\*(Aqdoes_role\*(Aq],
\&    );
\&
\&    # uses MouseX::Types or MooseX::Types
\&    use Any::Moose \*(AqX::Types\*(Aq;
\&
\&    # gives you the right class name depending on which Mo*se was loaded
\&    extends any_moose(\*(Aq::Meta::Class\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Though we recommend that people generally use Moose, we accept that Moose
cannot yet be used for everything everywhere. People generally like the Moose
sugar, so many people use Mouse, a lightweight replacement for parts of
Moose.
.PP
Because Mouse strives for compatibility with Moose, it's easy to substitute one
for the other. This module facilitates that substitution. By default, Mouse
will be provided to libraries, unless Moose is already loaded \-or\-
explicitly requested by the end-user. The end-user can force the decision
of which backend to use by setting the environment variable \f(CW\*(C`ANY_MOOSE\*(C'\fR to
be \f(CW\*(C`Moose\*(C'\fR or \f(CW\*(C`Mouse\*(C'\fR.
.PP
Note that the decision of which backend to use is made only once, so that if
Any-Moose picks Mouse, then a third-party library loads Moose, anything else
that uses Any-Moose will continue to pick Mouse.
.PP
So, if you have to use Mouse, please be considerate to the Moose fanboys
(like myself!) and use Any-Moose instead. \f(CW\*(C`:)\*(C'\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Moose
.PP
Mouse
.PP
Squirrel \- a deprecated first-stab at Any-Moose-like logic. Its biggest
fault was in making the decision of which backend to use every time it was
used, rather than just once.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Shawn M Moore <sartak@gmail.com>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Stevan Little <stevan@iinteractive.com>
.IP "\(bu" 4
Tokuhiro Matsuno <tokuhirom@gmail.com>
.IP "\(bu" 4
Goro Fuji <gfuji@cpan.org>
.IP "\(bu" 4
Ricardo Signes <rjbs@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011 by Best Practical Solutions.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
