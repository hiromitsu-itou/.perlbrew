.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojolicious::Plugin::DefaultHelpers 3"
.TH Mojolicious::Plugin::DefaultHelpers 3 "2012-03-13" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojolicious::Plugin::DefaultHelpers \- Default helpers plugin
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # Mojolicious
\&  $self\->plugin(\*(AqDefaultHelpers\*(Aq);
\&
\&  # Mojolicious::Lite
\&  plugin \*(AqDefaultHelpers\*(Aq;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojolicious::Plugin::DefaultHelpers is a collection of renderer helpers
for Mojolicious. This is a core plugin, that means it is always enabled
and its code a good example for learning to build new plugins.
.SH "HELPERS"
.IX Header "HELPERS"
Mojolicious::Plugin::DefaultHelpers implements the following helpers.
.ie n .SS """app"""
.el .SS "\f(CWapp\fP"
.IX Subsection "app"
.Vb 1
\&  %= app\->secret
.Ve
.PP
Alias for \*(L"app\*(R" in Mojolicious::Controller.
.ie n .SS """config"""
.el .SS "\f(CWconfig\fP"
.IX Subsection "config"
.Vb 1
\&  %= config \*(Aqsomething\*(Aq
.Ve
.PP
Alias for \*(L"config\*(R" in Mojo.
.ie n .SS """content"""
.el .SS "\f(CWcontent\fP"
.IX Subsection "content"
.Vb 5
\&  %= content foo => begin
\&    test
\&  % end
\&  %= content \*(Aqfoo\*(Aq
\&  %= content
.Ve
.PP
Store content and retrieve it.
.ie n .SS """content_for"""
.el .SS "\f(CWcontent_for\fP"
.IX Subsection "content_for"
.Vb 4
\&  % content_for foo => begin
\&    test
\&  % end
\&  %= content_for \*(Aqfoo\*(Aq
.Ve
.PP
Append content to named buffer and retrieve it.
.PP
.Vb 7
\&  % content_for message => begin
\&    Hello
\&  % end
\&  % content_for message => begin
\&    world!
\&  % end
\&  %= content_for \*(Aqmessage\*(Aq
.Ve
.ie n .SS """current_route"""
.el .SS "\f(CWcurrent_route\fP"
.IX Subsection "current_route"
.Vb 4
\&  % if (current_route \*(Aqlogin\*(Aq) {
\&    Welcome to Mojolicious!
\&  % }
\&  %= current_route
.Ve
.PP
Check or get name of current route. Note that this helper is \s-1EXPERIMENTAL\s0 and
might change without warning!
.ie n .SS """dumper"""
.el .SS "\f(CWdumper\fP"
.IX Subsection "dumper"
.Vb 1
\&  %= dumper {some => \*(Aqdata\*(Aq}
.Ve
.PP
Dump a Perl data structure using Data::Dumper.
.ie n .SS """extends"""
.el .SS "\f(CWextends\fP"
.IX Subsection "extends"
.Vb 2
\&  % extends \*(Aqblue\*(Aq;
\&  % extends \*(Aqblue\*(Aq, title => \*(AqBlue!\*(Aq;
.Ve
.PP
Extend a template, all arguments get merged into the stash.
.ie n .SS """flash"""
.el .SS "\f(CWflash\fP"
.IX Subsection "flash"
.Vb 1
\&  %= flash \*(Aqfoo\*(Aq
.Ve
.PP
Alias for \*(L"flash\*(R" in Mojolicious::Controller.
.ie n .SS """include"""
.el .SS "\f(CWinclude\fP"
.IX Subsection "include"
.Vb 2
\&  %= include \*(Aqmenubar\*(Aq
\&  %= include \*(Aqmenubar\*(Aq, format => \*(Aqtxt\*(Aq
.Ve
.PP
Include a partial template, all arguments get localized automatically and are
only available in the partial template.
.ie n .SS """layout"""
.el .SS "\f(CWlayout\fP"
.IX Subsection "layout"
.Vb 2
\&  % layout \*(Aqgreen\*(Aq;
\&  % layout \*(Aqgreen\*(Aq, title => \*(AqGreen!\*(Aq;
.Ve
.PP
Render this template with a layout, all arguments get merged into the stash.
.ie n .SS """memorize"""
.el .SS "\f(CWmemorize\fP"
.IX Subsection "memorize"
.Vb 12
\&  %= memorize begin
\&    %= time
\&  % end
\&  %= memorize {expires => time + 1} => begin
\&    %= time
\&  % end
\&  %= memorize foo => begin
\&    %= time
\&  % end
\&  %= memorize foo => {expires => time + 1} => begin
\&    %= time
\&  % end
.Ve
.PP
Memorize block result in memory and prevent future execution.
.ie n .SS """param"""
.el .SS "\f(CWparam\fP"
.IX Subsection "param"
.Vb 1
\&  %= param \*(Aqfoo\*(Aq
.Ve
.PP
Alias for \*(L"param\*(R" in Mojolicious::Controller.
.ie n .SS """session"""
.el .SS "\f(CWsession\fP"
.IX Subsection "session"
.Vb 1
\&  %= session \*(Aqfoo\*(Aq
.Ve
.PP
Alias for \*(L"session\*(R" in Mojolicious::Controller.
.ie n .SS """stash"""
.el .SS "\f(CWstash\fP"
.IX Subsection "stash"
.Vb 2
\&  %= stash \*(Aqfoo\*(Aq
\&  % stash foo => \*(Aqbar\*(Aq;
.Ve
.PP
Alias for \*(L"stash\*(R" in Mojolicious::Controller.
.ie n .SS """title"""
.el .SS "\f(CWtitle\fP"
.IX Subsection "title"
.Vb 3
\&  % title \*(AqWelcome!\*(Aq;
\&  % title \*(AqWelcome!\*(Aq, foo => \*(Aqbar\*(Aq;
\&  %= title
.Ve
.PP
Page title, all arguments get merged into the stash.
.ie n .SS """url_for"""
.el .SS "\f(CWurl_for\fP"
.IX Subsection "url_for"
.Vb 1
\&  %= url_for \*(Aqnamed\*(Aq, controller => \*(Aqbar\*(Aq, action => \*(Aqbaz\*(Aq
.Ve
.PP
Alias for \*(L"url_for\*(R" in Mojolicious::Controller.
.ie n .SS """url_with"""
.el .SS "\f(CWurl_with\fP"
.IX Subsection "url_with"
.Vb 1
\&  %= url_with \*(Aqnamed\*(Aq, controller => \*(Aqbar\*(Aq, action => \*(Aqbaz\*(Aq
.Ve
.PP
Does the same as \f(CW\*(C`url_for\*(C'\fR, but inherits query parameters from the current
request. Note that this helper is \s-1EXPERIMENTAL\s0 and might change without
warning!
.PP
.Vb 1
\&  %= url_with\->query([page => 2])
.Ve
.SH "METHODS"
.IX Header "METHODS"
Mojolicious::Plugin::DefaultHelpers inherits all methods from
Mojolicious::Plugin and implements the following new ones.
.ie n .SS """register"""
.el .SS "\f(CWregister\fP"
.IX Subsection "register"
.Vb 1
\&  $plugin\->register;
.Ve
.PP
Register helpers in Mojolicious application.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious, Mojolicious::Guides, <http://mojolicio.us>.
