.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQL::Translator::Parser::MySQL 3"
.TH SQL::Translator::Parser::MySQL 3 "2011-05-05" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SQL::Translator::Parser::MySQL \- parser for MySQL
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use SQL::Translator;
\&  use SQL::Translator::Parser::MySQL;
\&
\&  my $translator = SQL::Translator\->new;
\&  $translator\->parser("SQL::Translator::Parser::MySQL");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The grammar is influenced heavily by Tim Bunce's \*(L"mysql2ora\*(R" grammar.
.PP
Here's the word from the MySQL site
(http://www.mysql.com/doc/en/CREATE_TABLE.html):
.PP
.Vb 2
\&  CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name [(create_definition,...)]
\&  [table_options] [select_statement]
\&  
\&  or
\&  
\&  CREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name LIKE old_table_name;
\&  
\&  create_definition:
\&    col_name type [NOT NULL | NULL] [DEFAULT default_value] [AUTO_INCREMENT]
\&              [PRIMARY KEY] [reference_definition]
\&    or    PRIMARY KEY (index_col_name,...)
\&    or    KEY [index_name] (index_col_name,...)
\&    or    INDEX [index_name] (index_col_name,...)
\&    or    UNIQUE [INDEX] [index_name] (index_col_name,...)
\&    or    FULLTEXT [INDEX] [index_name] (index_col_name,...)
\&    or    [CONSTRAINT symbol] FOREIGN KEY [index_name] (index_col_name,...)
\&              [reference_definition]
\&    or    CHECK (expr)
\&  
\&  type:
\&          TINYINT[(length)] [UNSIGNED] [ZEROFILL]
\&    or    SMALLINT[(length)] [UNSIGNED] [ZEROFILL]
\&    or    MEDIUMINT[(length)] [UNSIGNED] [ZEROFILL]
\&    or    INT[(length)] [UNSIGNED] [ZEROFILL]
\&    or    INTEGER[(length)] [UNSIGNED] [ZEROFILL]
\&    or    BIGINT[(length)] [UNSIGNED] [ZEROFILL]
\&    or    REAL[(length,decimals)] [UNSIGNED] [ZEROFILL]
\&    or    DOUBLE[(length,decimals)] [UNSIGNED] [ZEROFILL]
\&    or    FLOAT[(length,decimals)] [UNSIGNED] [ZEROFILL]
\&    or    DECIMAL(length,decimals) [UNSIGNED] [ZEROFILL]
\&    or    NUMERIC(length,decimals) [UNSIGNED] [ZEROFILL]
\&    or    CHAR(length) [BINARY]
\&    or    VARCHAR(length) [BINARY]
\&    or    DATE
\&    or    TIME
\&    or    TIMESTAMP
\&    or    DATETIME
\&    or    TINYBLOB
\&    or    BLOB
\&    or    MEDIUMBLOB
\&    or    LONGBLOB
\&    or    TINYTEXT
\&    or    TEXT
\&    or    MEDIUMTEXT
\&    or    LONGTEXT
\&    or    ENUM(value1,value2,value3,...)
\&    or    SET(value1,value2,value3,...)
\&  
\&  index_col_name:
\&          col_name [(length)]
\&  
\&  reference_definition:
\&          REFERENCES tbl_name [(index_col_name,...)]
\&                     [MATCH FULL | MATCH PARTIAL]
\&                     [ON DELETE reference_option]
\&                     [ON UPDATE reference_option]
\&  
\&  reference_option:
\&          RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT
\&  
\&  table_options:
\&          TYPE = {BDB | HEAP | ISAM | InnoDB | MERGE | MRG_MYISAM | MYISAM }
\&  or      ENGINE = {BDB | HEAP | ISAM | InnoDB | MERGE | MRG_MYISAM | MYISAM }
\&  or      AUTO_INCREMENT = #
\&  or      AVG_ROW_LENGTH = #
\&  or      [ DEFAULT ] CHARACTER SET charset_name
\&  or      CHECKSUM = {0 | 1}
\&  or      COLLATE collation_name
\&  or      COMMENT = "string"
\&  or      MAX_ROWS = #
\&  or      MIN_ROWS = #
\&  or      PACK_KEYS = {0 | 1 | DEFAULT}
\&  or      PASSWORD = "string"
\&  or      DELAY_KEY_WRITE = {0 | 1}
\&  or      ROW_FORMAT= { default | dynamic | fixed | compressed }
\&  or      RAID_TYPE= {1 | STRIPED | RAID0 } RAID_CHUNKS=#  RAID_CHUNKSIZE=#
\&  or      UNION = (table_name,[table_name...])
\&  or      INSERT_METHOD= {NO | FIRST | LAST }
\&  or      DATA DIRECTORY="absolute path to directory"
\&  or      INDEX DIRECTORY="absolute path to directory"
.Ve
.PP
A subset of the \s-1ALTER\s0 \s-1TABLE\s0 syntax that allows addition of foreign keys:
.PP
.Vb 1
\&  ALTER [IGNORE] TABLE tbl_name alter_specification [, alter_specification] ...
\&
\&  alter_specification:
\&          ADD [CONSTRAINT [symbol]]
\&          FOREIGN KEY [index_name] (index_col_name,...)
\&             [reference_definition]
.Ve
.PP
A subset of \s-1INSERT\s0 that we ignore:
.PP
.Vb 1
\&  INSERT anything
.Ve
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
This parser takes a single optional parser_arg \f(CW\*(C`mysql_parser_version\*(C'\fR, which
provides the desired version for the target database. Any statement in the processed
dump file, that is commented with a version higher than the one supplied, will be stripped.
.PP
Valid version specifiers for \f(CW\*(C`mysql_parser_version\*(C'\fR are listed here
.PP
More information about the MySQL comment-syntax: <http://dev.mysql.com/doc/refman/5.0/en/comments.html>
.SH "AUTHOR"
.IX Header "AUTHOR"
Ken Youens-Clark <kclark@cpan.org>,
Chris Mungall <cjm@fruitfly.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Parse::RecDescent, SQL::Translator::Schema.
