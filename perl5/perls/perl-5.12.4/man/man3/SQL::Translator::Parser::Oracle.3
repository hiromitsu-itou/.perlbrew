.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SQL::Translator::Parser::Oracle 3"
.TH SQL::Translator::Parser::Oracle 3 "2011-05-05" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
SQL::Translator::Parser::Oracle \- parser for Oracle
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use SQL::Translator;
\&  use SQL::Translator::Parser::Oracle;
\&
\&  my $translator = SQL::Translator\->new;
\&  $translator\->parser("SQL::Translator::Parser::Oracle");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
From http://www.ss64.com/ora/table_c.html:
.PP
.Vb 10
\& CREATE [GLOBAL TEMPORARY] TABLE [schema.]table (tbl_defs,...)
\&     [ON COMMIT {DELETE|PRESERVE} ROWS]
\&         [storage_options | CLUSTER cluster_name (col1, col2,... )
\&            | ORGANIZATION {HEAP [storage_options] 
\&            | INDEX idx_organized_tbl_clause}]
\&               [LOB_storage_clause][varray_clause][nested_storage_clause]
\&                   partitioning_options
\&                      [[NO]CACHE] [[NO]MONITORING] [PARALLEL parallel_clause]
\&                         [ENABLE enable_clause | DISABLE disable_clause]
\&                             [AS subquery]
.Ve
.PP
tbl_defs:
   column datatype [\s-1DEFAULT\s0 expr] [column_constraint(s)]
   table_ref_constraint
.PP
storage_options:
   \s-1PCTFREE\s0 int
   \s-1PCTUSED\s0 int
   \s-1INITTRANS\s0 int
   \s-1MAXTRANS\s0 int
   \s-1STORAGE\s0 storage_clause
   \s-1TABLESPACE\s0 tablespace
   [LOGGING|NOLOGGING]
.PP
idx_organized_tbl_clause:
   storage_option(s) [\s-1PCTTHRESHOLD\s0 int]
     [\s-1COMPRESS\s0 int|NOCOMPRESS]
         [ [\s-1INCLUDING\s0 column_name] \s-1OVERFLOW\s0 [storage_option(s)] ]
.PP
nested_storage_clause:
   \s-1NESTED\s0 \s-1TABLE\s0 nested_item \s-1STORE\s0 \s-1AS\s0 storage_table
      [\s-1RETURN\s0 \s-1AS\s0 {LOCATOR|VALUE} ]
.PP
partitioning_options:
   Partition_clause {ENABLE|DISABLE} \s-1ROW\s0 \s-1MOVEMENT\s0
.PP
Column Constraints
(http://www.ss64.com/ora/clause_constraint_col.html)
.PP
.Vb 1
\&   CONSTRAINT constrnt_name {UNIQUE|PRIMARY KEY} constrnt_state
\&
\&   CONSTRAINT constrnt_name CHECK(condition) constrnt_state
\&
\&   CONSTRAINT constrnt_name [NOT] NULL constrnt_state
\&
\&   CONSTRAINT constrnt_name REFERENCES [schema.]table[(column)]
\&      [ON DELETE {CASCADE|SET NULL}] constrnt_state
.Ve
.PP
constrnt_state   
    [[\s-1NOT\s0] \s-1DEFERRABLE\s0] [\s-1INITIALLY\s0 {IMMEDIATE|DEFERRED}]
       [\s-1RELY\s0 | \s-1NORELY\s0] [\s-1USING\s0 \s-1INDEX\s0 using_index_clause]
          [ENABLE|DISABLE] [VALIDATE|NOVALIDATE]
              [\s-1EXCEPTIONS\s0 \s-1INTO\s0 [schema.]table]
.PP
Note that probably not all of the above syntax is supported, but the grammar 
was altered to better handle the syntax created by DDL::Oracle.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ken Youens-Clark <kclark@cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
SQL::Translator, Parse::RecDescent, DDL::Oracle.
