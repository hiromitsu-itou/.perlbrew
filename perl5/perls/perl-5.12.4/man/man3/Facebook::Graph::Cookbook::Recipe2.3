.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Facebook::Graph::Cookbook::Recipe2 3"
.TH Facebook::Graph::Cookbook::Recipe2 3 "2011-10-19" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Facebook::Graph::Cookbook::Recipe2 \- Building a Full Web App
.SH "VERSION"
.IX Header "VERSION"
version 1.0301
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A full working web app for those people who like to start hacking from a working example and make it their own.
.SS "Prerequisite Modules"
.IX Subsection "Prerequisite Modules"
You'll need to have all of the following modules installed in order to run this app (in addition to Facebook::Graph):
.PP
DateTime::Format::ICal Dancer Template Data::ICal XML::FeedPP
.SS "Assumptions"
.IX Subsection "Assumptions"
This recipe assumes that that you have a Facebook (<http://www.facebook.com>) account.
.PP
You'll also have to be able to point a domain name to a server that is accessible from the Internet. \s-1DNS\s0 and server configuration are way beyond the scope of this document.
.PP
In order to edit this web app you're either going to have to know or be willing to learn Dancer. It's a good little web app server. You can find out more at <http://perldancer.org>.
.SH "RECIPE"
.IX Header "RECIPE"
.SS "Step 1: Set up the developer application on Facebook."
.IX Subsection "Step 1: Set up the developer application on Facebook."
Go to <http://apps.facebook.com/developer>.
.PP
Click \*(L"Allow\*(R".
.SS "Step 2: Create your application."
.IX Subsection "Step 2: Create your application."
Go to <http://www.facebook.com/developers/createapp.php> or click \*(L"Set Up New Application\*(R" from the developer application.
.PP
Fill in an application name. The only restriction is that it can't use a Facebook trademark or be similar to official Facebook application names.
.PP
Agree to the terms of servce.
.PP
Click \*(L"Create Application\*(R".
.SS "Step 3: The Connect tab."
.IX Subsection "Step 3: The Connect tab."
After creating your application, go to the \*(L"Connect\*(R" tab.
.PP
Fill in the \*(L"Connect \s-1URL\s0\*(R" field. It should be \f(CW\*(C`http://www.yourapplication.com/\*(C'\fR. It is the base \s-1URL\s0 to where you'll be deploying your application. The trailing slash is required.
.PP
Click \*(L"save\*(R".
.SS "Step 4: Note your application settings."
.IX Subsection "Step 4: Note your application settings."
You either want to make note of your \*(L"Application \s-1ID\s0\*(R" and your \*(L"Application Secret\*(R" or bookmark this page so you can come back to it. You'll need these later.
.SS "Step 5: Copy files."
.IX Subsection "Step 5: Copy files."
If you don't already have it downloaded, download a tarball of Facebook::Graph and extract it:
.PP
.Vb 1
\& tar xfz Facebook\-Graph\-0.0700.tar.gz
.Ve
.PP
And copy the files from \f(CW\*(C`eg/recipe2\*(C'\fR where ever you want to deploy your app. For this example we'll assume you want to deploy from \f(CW\*(C`/opt/webapp\*(C'\fR.
.PP
.Vb 2
\& mkdir \-p /opt/webapp
\& cp \-Rfp Facebook\-Graph/eg/recipe2/* /opt/webapp
.Ve
.SS "Step 6: Configure your app."
.IX Subsection "Step 6: Configure your app."
Before we can run the app we need to edit the config file.
.PP
.Vb 2
\& cd /opt/webapp
\& vi config.yml
.Ve
.PP
Specifically we need to set the \f(CW\*(C`app_id\*(C'\fR and \f(CW\*(C`secret\*(C'\fR fields with information from our Facebook application settings page. And we need to update the \f(CW\*(C`postback\*(C'\fR with the domain pointing to our server.
.SS "Step 7: Start it."
.IX Subsection "Step 7: Start it."
To start the app just type the following command:
.PP
.Vb 2
\& cd /opt/webapp
\& perl app.pl
.Ve
.SS "Step 8: Play with it."
.IX Subsection "Step 8: Play with it."
Go use the web app. See what it does. Point your browser to:
.PP
.Vb 1
\& http://www.yourapplication.com/
.Ve
.SS "Step 9: Start tinkering."
.IX Subsection "Step 9: Start tinkering."
Now that you know you have a working app, start tinkering. Make it do what you want it to do.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
If you would like a step by step as to how this app was created, download the \s-1PDF\s0 presentation (http://www.madmongers.org/talks/writing\-facebook\-apps\-in\-10\-minutes\-or\-less <http://www.madmongers.org/talks/writing-facebook-apps-in-10-minutes-or-less>) I gave of this app at MadMongers (<http://www.madmongers.org>).
.PP
For more recipes, check out the Facebook::Graph::Cookbook.
.SH "LEGAL"
.IX Header "LEGAL"
Facebook::Graph is Copyright 2010 Plain Black Corporation (<http://www.plainblack.com>) and is licensed under the same terms as Perl itself.
