.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Appender::Limit 3"
.TH Appender::Limit 3 "2010-07-23" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.Vb 1
\&    Log::Log4perl::Appender::Limit \- Limit message delivery via block period
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Log::Log4perl qw(:easy);
\&
\&    my $conf = qq(
\&      log4perl.category = WARN, Limiter
\&    
\&          # Email appender
\&      log4perl.appender.Mailer          = Log::Dispatch::Email::MailSend
\&      log4perl.appender.Mailer.to       = drone\e@pageme.com
\&      log4perl.appender.Mailer.subject  = Something\*(Aqs broken!
\&      log4perl.appender.Mailer.buffered = 0
\&      log4perl.appender.Mailer.layout   = PatternLayout
\&      log4perl.appender.Mailer.layout.ConversionPattern=%d %m %n
\&
\&          # Limiting appender, using the email appender above
\&      log4perl.appender.Limiter              = Log::Log4perl::Appender::Limit
\&      log4perl.appender.Limiter.appender     = Mailer
\&      log4perl.appender.Limiter.block_period = 3600
\&    );
\&
\&    Log::Log4perl\->init(\e$conf);
\&    WARN("This message will be sent immediately");
\&    WARN("This message will be delayed by one hour.");
\&    sleep(3601);
\&    WARN("This message plus the last one will be sent now");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.ie n .IP """appender""" 4
.el .IP "\f(CWappender\fR" 4
.IX Item "appender"
Specifies the name of the appender used by the limiter. The
appender specified must be defined somewhere in the configuration file,
not necessarily before the definition of 
\&\f(CW\*(C`Log::Log4perl::Appender::Limit\*(C'\fR.
.ie n .IP """block_period""" 4
.el .IP "\f(CWblock_period\fR" 4
.IX Item "block_period"
Period in seconds between delivery of messages. If messages arrive in between,
they will be either saved (if \f(CW\*(C`accumulate\*(C'\fR is set to a true value) or
discarded (if \f(CW\*(C`accumulate\*(C'\fR isn't set).
.ie n .IP """persistent""" 4
.el .IP "\f(CWpersistent\fR" 4
.IX Item "persistent"
File name in which \f(CW\*(C`Log::Log4perl::Appender::Limit\*(C'\fR persistently stores 
delivery times. If omitted, the appender will have no recollection of what
happened when the program restarts.
.ie n .IP """max_until_flushed""" 4
.el .IP "\f(CWmax_until_flushed\fR" 4
.IX Item "max_until_flushed"
Maximum number of accumulated messages. If exceeded, the appender flushes 
all messages, regardless if the interval set in \f(CW\*(C`block_period\*(C'\fR 
has passed or not. Don't mix with \f(CW\*(C`max_until_discarded\*(C'\fR.
.ie n .IP """max_until_discarded""" 4
.el .IP "\f(CWmax_until_discarded\fR" 4
.IX Item "max_until_discarded"
Maximum number of accumulated messages. If exceeded, the appender will
simply discard additional messages, waiting for \f(CW\*(C`block_period\*(C'\fR to expire
to flush all accumulated messages. Don't mix with \f(CW\*(C`max_until_flushed\*(C'\fR.
.PP
If the appender attached to \f(CW\*(C`Limit\*(C'\fR uses \f(CW\*(C`PatternLayout\*(C'\fR with a timestamp
specifier, you will notice that the message timestamps are reflecting the
original log event, not the time of the message rendering in the
attached appender. Major trickery has been applied to accomplish 
this (Cough!).
.SH "DEVELOPMENT NOTES"
.IX Header "DEVELOPMENT NOTES"
\&\f(CW\*(C`Log::Log4perl::Appender::Limit\*(C'\fR is a \fIcomposite\fR appender.
Unlike other appenders, it doesn't log any messages, it just
passes them on to its attached sub-appender.
For this reason, it doesn't need a layout (contrary to regular appenders).
If it defines none, messages are passed on unaltered.
.PP
Custom filters are also applied to the composite appender only.
They are \fInot\fR applied to the sub-appender. Same applies to appender
thresholds. This behaviour might change in the future.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2002\-2009 by Mike Schilli <m@perlmeister.com> 
and Kevin Goess <cpan@goess.org>.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
