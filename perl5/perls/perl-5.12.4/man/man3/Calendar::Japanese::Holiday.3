.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Calendar::Japanese::Holiday 3"
.TH Calendar::Japanese::Holiday 3 "2007-06-17" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Calendar::Japanese::Holiday \- Japanese holidays in calender
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Calendar::Japanese::Holiday;
\&
\&  # Getting a list of holidays
\&  $holidays = getHolidays(2008, 5);
\&  $holidays = getHolidays(2008, 5, 1);
\&
\&  # Examining whether it is holiday or not.
\&  $name = isHoliday(2007, 5, 5);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module treats holidays information in Japanese calendar.
The list of holidays can be acquired, and you can examine whether
a day is holiday or not. You can acquire the holiday name too.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .IP "getHolidays($year, $month [, $furikae])" 5
.el .IP "getHolidays($year, \f(CW$month\fR [, \f(CW$furikae\fR])" 5
.IX Item "getHolidays($year, $month [, $furikae])"
Returns a hash reference that has holidays in \f(CW$year\fR/$month.
Returns empty hash reference if no holidays.
It returns substitute holidays too if \f(CW$furikae\fR is true.
\&\f(CW$furikae\fR is false when \f(CW$furikae\fR is omitted.
\&\f(CW$year\fR is supported after 1948. A undef is returned if error ocucred.
.Sp
.Vb 2
\& # Case 1 \- $furikae is omitted
\& $holidays = getHolidays(2008, 5);
\&
\& Return:
\& $holidays = {
\&          \*(Aq4\*(Aq => "\ex{307f}\ex{3069}\ex{308a}\ex{306e}\ex{65e5}",  # Midori\-no\-hi
\&          \*(Aq3\*(Aq => "\ex{61b2}\ex{6cd5}\ex{8a18}\ex{5ff5}\ex{65e5}",  # Kenpou\-Kinenbi
\&          \*(Aq5\*(Aq => "\ex{3053}\ex{3069}\ex{3082}\ex{306e}\ex{65e5}"   # Kodomo\-no\-hi
\&        };
\&
\& # Case 2 \- $furikae is true
\& $holidays = getHolidays(2008, 5, 1);
\&
\& Return:
\& $holidays = {
\&          \*(Aq6\*(Aq => "\ex{632f}\ex{66ff}",                          # Furikae
\&          \*(Aq4\*(Aq => "\ex{307f}\ex{3069}\ex{308a}\ex{306e}\ex{65e5}",  # Midori\-no\-hi
\&          \*(Aq3\*(Aq => "\ex{61b2}\ex{6cd5}\ex{8a18}\ex{5ff5}\ex{65e5}",  # Kenpou\-Kinenbi
\&          \*(Aq5\*(Aq => "\ex{3053}\ex{3069}\ex{3082}\ex{306e}\ex{65e5}"   # Kodomo\-no\-hi
\&        };
\&
\& # Case 3 \- no holidays
\& $holidays = getHolidays(2008, 6);
\&
\& Return:
\& $holidays = {};
.Ve
.ie n .IP "isHoliday($year, $month, $day [, $furikae])" 5
.el .IP "isHoliday($year, \f(CW$month\fR, \f(CW$day\fR [, \f(CW$furikae\fR])" 5
.IX Item "isHoliday($year, $month, $day [, $furikae])"
Returns holiday name.
Returns undef if \f(CW$year\fR/$month/$day is not holiday.
\&\f(CW$furikae\fR is same as \fIgetHolidays()\fR.
.Sp
.Vb 2
\& $name = isHoliday(2007, 5, 5);
\& $name is "\ex{3053}\ex{3069}\ex{3082}\ex{306e}\ex{65e5}" Kodomo\-no\-hi
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
http://wiki.bit\-hive.com/tomizoo/pg/Perl%20%BD%CB%C6%FC%CC%BE%A4%CE%BC%E8%C6%C0
.PP
(In Japanese document)
.SH "AUTHOR"
.IX Header "AUTHOR"
Kazuyoshi Tomita, <kztomita@bit\-hive.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2007 by Kazuyoshi Tomita
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.1 or,
at your option, any later version of Perl 5 you may have available.
