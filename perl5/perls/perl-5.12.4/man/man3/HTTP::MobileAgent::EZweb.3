.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HTTP::MobileAgent::EZweb 3"
.TH HTTP::MobileAgent::EZweb 3 "2011-04-26" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTTP::MobileAgent::EZweb \- EZweb implementation
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use HTTP::MobileAgent;
\&
\&  local $ENV{HTTP_USER_AGENT} = "UP.Browser/3.01\-HI02 UP.Link/3.2.1.2";
\&  my $agent = HTTP::MobileAgent\->new;
\&
\&  printf "Name: %s\en", $agent\->name;            # "UP.Browser"
\&  printf "Version: %s\en", $agent\->version;      # 3.01
\&  printf "DevieID: %s\en", $agent\->device_id;    # HI02
\&  printf "Server: %s\en", $agent\->server;        # "UP.Link/3.2.1.2"
\&
\&  # e.g.) UP.Browser/3.01\-HI02 UP.Link/3.2.1.2 (Google WAP Proxy/1.0)
\&  printf "Comment: %s\en", $agent\->comment;      # "Google WAP Proxy/1.0"
\&
\&  # e.g.) KDDI\-TS21 UP.Browser/6.0.2.276 (GUI) MMP/1.1
\&  print "XHTML compiant!\en" if $agent\->xhtml_compliant; # true
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
HTTP::MobileAgent::EZweb is a subclass of HTTP::MobileAgent, which
implements EZweb (\s-1WAP1\s0.0/2.0) user agents.
.SH "METHODS"
.IX Header "METHODS"
See \*(L"\s-1METHODS\s0\*(R" in HTTP::MobileAgent for common methods. Here are
HTTP::MobileAgent::EZweb specific methods.
.IP "version" 4
.IX Item "version"
.Vb 1
\&  $version = $agent\->version;
.Ve
.Sp
returns \s-1UP\s0.Browser version number like '3.01'.
.IP "device_id" 4
.IX Item "device_id"
.Vb 1
\&  $device_id = $agent\->device_id;
.Ve
.Sp
returns device \s-1ID\s0 like '\s-1TS21\s0'.
.IP "server" 4
.IX Item "server"
.Vb 1
\&  $server = $agent\->server;
.Ve
.Sp
returns server string like \*(L"\s-1UP\s0.Link/3.2.1.2\*(R".
.IP "comment" 4
.IX Item "comment"
.Vb 1
\&  $comment = $agent\->comment;
.Ve
.Sp
returns comment like \*(L"Google \s-1WAP\s0 Proxy/1.0\*(R". returns undef if nothinng.
.IP "xhtml_compliant" 4
.IX Item "xhtml_compliant"
.Vb 1
\&  if ($agent\->xhtml_compliant) { }
.Ve
.Sp
returns if the agent is \s-1XHTML\s0 compliant.
.IP "is_tuka" 4
.IX Item "is_tuka"
.Vb 1
\&  if ($agent\->is_tuka) { }
.Ve
.Sp
returns if the agent is TU-KA model.
.IP "is_win" 4
.IX Item "is_win"
.Vb 1
\&  if ($agent\->is_win) { }
.Ve
.Sp
returns if the agent is win model.
.SH "TODO"
.IX Header "TODO"
.IP "\(bu" 4
Spec information support listed in
http://www.au.kddi.com/ezfactory/tec/spec/new_win/ezkishu.html
.Sp
(Patches are always welcome ;))
.SH "AUTHOR"
.IX Header "AUTHOR"
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
HTTP::MobileAgent
.PP
http://www.au.kddi.com/ezfactory/tec/spec/4_4.html
.PP
http://www.au.kddi.com/ezfactory/tec/spec/new_win/ezkishu.html
